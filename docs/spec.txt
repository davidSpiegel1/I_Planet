# I Planet Spec:

## New Design:
	
	-- New architecture --
		
		* We have one GUI file for program. (main)
		* It's job is:
			1.) Take parsed map (2D list) 
			2.) Internal game logic (nested) (Might be in controller)
			3.) Menu/Option dashboard
		# We also have another GUI file for parsing map
			1.) Each *object* in I Planet will have a node associated with it (Derived from .txt file)
			2.) While doing this, we allow for character design and artistic elements


	-- New character design --

		* Somehow find a chatGTP API and connect to it 
		* Then, each character will change it's response to the user using API call to AI system
		* Also, we want characters to move without the user character moving
			* We could do this using animations and manipulating the specific element within the 2D list object.  (DONE)
		* Maybe we could have server-based multiplayer
		* Made characters look better by giving drop-shadow and getting rid of outline


		* IDEA: We probably would have way better performance if the character just moved
			with the graphic on the board. This way everything is a 'seed'
			
			1.) Change every L-R-Up-Down movement
			2.) Keep a pos variable that is changed over time
			3.) Somehow have all the movements be the same
			4.) Move left and right predicated on the next part

			. Then, it should look prettier.
			. We can also fix character movements while we are at it


	-- Issues --

		* Currently, deleting inventory is not working.
			- Possible fix: Use 'e' to derive the correct Node to delete from GridPane (DONE)


		* There are multiple issues with moving characters:
			- The solution used: Instead of changing the 
					    actual grid, we will just animate
					    the graphic across the screen (1)
		* There is an issue with moving right with the characters.
			- The solution used: If position%amountOfCol == 0:
						Then, we cannot move right
		* The characters are moving randomly and coordinated together.
			- This looks ugly, so we will fix it by doing two things:
				(1) - Use a shortest path algorithm and a 'place_to_go' field
					to make the objects move with purpose
				(2) - Fix animation and time between ticks to make the characters
				         look more fluid


	-- For Kyle --
		* Make a guy map 
			1.) Has to have all levels
				a.) compile all text files into a string/array
				b.) Parse the text file into guy representation
			2.) Has to be scrollable (Aids in putting gui in small area)
				a.) There is a library for that 
			3.) Has to have current info of possible enemies and character
			4.) Be zoomable??
		<Footnote> Google earth kinda?

		





	-- FootNotes --
(1) Note that this requires the node class to have a coordinate so we know where the 'seed' is going.
	(1.1) Meaning, we have to make sure to cover the 'seed' block.						

			

	


